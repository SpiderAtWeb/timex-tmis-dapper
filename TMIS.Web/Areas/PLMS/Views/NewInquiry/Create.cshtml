@model NewInquiryVM

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/flatpickr/flatpickr.css" />
    <link rel="stylesheet" href="~/vendor/libs/select2/select2.css" />
    <link href="~/css/input-text-upper.css" rel="stylesheet" />
}

@section VendorScripts {
    <script src="~/vendor/libs/flatpickr/flatpickr.js"></script>
    <script src="~/vendor/libs/select2/select2.js"></script>
}

@section PageScripts {
    <script src="~/js/form-layouts.js"></script>
    <script src="~/custom/input-text-upper.js"></script>

    <script>
        $(document).ready(function () {

            function isInteger(value) {
                return typeof value === 'number' && Number.isInteger(value);
            }

            function handleChange() {
                var receivedDate = new Date(document.getElementById("receivedDate").value);

                // Check if a valid date is selected
                if (!isNaN(receivedDate)) {
                    // Add 2 days to the date
                    receivedDate.setDate(receivedDate.getDate());

                    // Format the date back to 'YYYY-MM-DD'
                    var receivedDate = receivedDate.toISOString().split('T')[0];

                    var selectedPresetsId = document.getElementById("presetsId").value;

                    // Convert values to integers and check if they are valid integers
                    selectedPresetsId = parseInt(selectedPresetsId, 10);


                    if (isInteger(selectedPresetsId) &&
                        receivedDate != '') {

                        let loadUrl = '@Url.Action("LoadActsAndSubActs", "NewInquiry", new { area = "PLMS" })';

                        $.ajax({
                            url: loadUrl,
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({
                                PresetId: selectedPresetsId,
                                SelectedDate: receivedDate
                            }),
                            success: function (data) {
                                var container = $('#activityContainer');
                                container.empty();

                                var tableHtml = `<div class="table-wrapper"><div class="table-responsive">
                                            <table class="table table table-rounded align-middle">
                                        <thead class="table-light">
                                            <tr>
                                                <th>#</th>
                                                <th>Activity</th>
                                                <th>User Category</th>
                                                <th>Plan Date</th>
                                                <th>Comments</th>
                                            </tr>
                                        </thead>
                                        <tbody>`;

                                $.each(data, function (index, activity) {
                                    tableHtml += `<tr>
                                    <td>${index + 1}</td>
                                    <td><strong>${activity.activiytName}</strong></td>
                                    <td>${activity.userCategoryText}</td>
                                    <td>
                                        <input type="hidden" name="ActivityList[${index}].UserCategoryId" value="${activity.userCategoryId}" />
                                        <input type="hidden" name="ActivityList[${index}].ActivityId" value="${activity.activityId}" />                                     
                                               ${activity.activiytValue}

                                    </td>
                                    <td>
                                        <textarea class="form-control rounded-2" id="commentTextarea-${activity.activityId}"
                                                  name="ActivityList[${index}].ActivityComment" rows="1"></textarea>
                                    </td>
                                  </tr>`;

                                    // Sub-activities
                                    $.each(activity.subActivityList, function (subIndex, subActivity) {
                                        tableHtml += `<tr>
                                        <td>${index + 1}.${subIndex + 1}</td>
                                        <td class="ps-4">${subActivity.activiytName}</td>
                                        <td>${subActivity.userCategoryText}</td>
                                        <td>
                                            <input type="hidden" name="ActivityList[${index}].SubActivityList[${subIndex}].UserCategoryId" value="${subActivity.userCategoryId}" />
                                            <input type="hidden" name="ActivityList[${index}].SubActivityList[${subIndex}].ActivityId" value="${subActivity.activityId}" />
                                            <input type="date" id="subactivity-${subActivity.activityId}" class="form-control dob-picker flatpickr-input"
                                                   name="ActivityList[${index}].SubActivityList[${subIndex}].ActiviytValue" value="${subActivity.activiytValue}" />
                                        </td>
                                        <td>
                                            <textarea class="form-control rounded-2" id="SubcommentTextarea-${subActivity.activityId}"
                                                      name="ActivityList[${index}].SubActivityList[${subIndex}].ActivityComment" rows="2"></textarea>
                                        </td>
                                      </tr>`;
                                    });
                                });

                                tableHtml += `</tbody></table></div></div>`;
                                container.append(tableHtml);
                            },
                            error: function (xhr, status, error) {
                                console.error("Error:", xhr);
                                console.error("Status:", status);
                                console.error("Error:", error);
                            }
                        });

                    }
                }
            }

            $("#presetsId").change(function () {
                handleChange();
            });

            // document.getElementById("selectedDate").addEventListener("change", handleChange);

           $('#myForm').on('submit', function (e) {
                let isValid = true;

                // First: check required fields
                $('.requiredField').each(function () {
                    const field = $(this);

                    if (!field.val()) {
                        alert('Required field is still missing!');
                        isValid = false;
                        return false; // break the .each loop
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    return false;
                }

                // Second: check if activityContainer has any elements
                if ($('#activityContainer').children().length === 0) {
                    alert("Please add at least one activity.");
                    e.preventDefault();
                    return false;
                }

                  // 3. Check if artwork is uploaded
                if (!$('#artwork').val()) {
                    alert("Please upload an image.");
                    e.preventDefault();
                    return false;
                }
                // Form passes all checks; allow submission
            });

        });
    </script>

    <script>
        $(document).on('click', '#add-size', function () {
          const sizeName = $('#sizeName').val().trim();
          const sizeQty = $('#sizeQty').val().trim();

          if (sizeName === "" || sizeQty === "") {
            toastr.error("Please fill in both Size Name and Quantity before adding a new row.");
            return;
          }

          // Check for duplicates
          let isDuplicate = false;
          $('.size-row').each(function () {
              const labelSize = $(this).find('.label-size-name').text().trim();
              if (labelSize === sizeName) {
                  isDuplicate = true;
                  return false; // exit .each loop
              }
          });


           // Check if maximum limit reached
          if ($('.size-row').length >= 10) {
            toastr.error("Maximum of 10 Sizes can be added.");
            return;
          }

          if (isDuplicate) {
            toastr.error("This Size is already added.");
            return;
          }

          const index = $('.size-row').length;

          // Add new row
                  const newRow = `<div class="row size-row align-items-stretch mb-1">
          <div class="col-4 g-1">
            <div class="size-label grey-box label-size-name">${empName}</div>
            <input type="hidden" name="EmployeePass.EmpPassEmpList[${index}].EmpName" value="${empName}" />
          </div>
          <div class="col-4 g-1">
            <div class="size-label grey-box label-size-qty">${empEpf}</div>
            <input type="hidden" name="EmployeePass.EmpPassEmpList[${index}].EmpEPF" value="${empEpf}" />
          </div>
          <div class="col-4 g-1">
            <div class="row align-items-stretch gx-1 h-100">
              <div class="col-2 d-flex">
                <button type="button" class="btn btn-danger w-100 h-100 delete-size">
                  <i class="fa-solid fa-trash-can"></i>
                </button>
              </div>
            </div>
          </div>
        </div>`;
          $('#sizeContainer').append(newRow);
          $('#sizeName').val('');
          $('#sizeQty').val('');
        });

                function reindexPersonRows() {
          $('.size-row').each(function (index) {
            // Update EmpName input
            $(this).find('input[name*="sizeName"]').attr('name', `EmployeePass.EmpPassEmpList[${index}].EmpName`);

            // Update EmpEPF input
            $(this).find('input[name*="sizeQty"]').attr('name', `EmployeePass.EmpPassEmpList[${index}].EmpEPF`);
          });
        }

        $(document).on('click', '.delete-size', function () {
          $(this).closest('.size-row').remove();
           reindexPersonRows();
        });
    </script>
}

@section PageStyles {
    <style>

        /* Outer container for rounded corners */
        .table-wrapper {
            border: 1px solid #dee2e6;
            border-radius: 15px;
            overflow: hidden; /* Ensures inner elements stay within rounded border */
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            margin-top: 15px;
        }

        /* Table styling */
        .table-rounded {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

            .table-rounded th,
            .table-rounded td {
                padding: 12px;
                vertical-align: middle;
                border-bottom: 1px solid #dee2e6;
            }

            .table-rounded thead {
                background-color: #f8f9fa;
                font-weight: 600;
            }

            /* Optional row hover effect */
            .table-rounded tbody tr:hover {
                background-color: #f1f1f1;
            }



        .list-group {
            flex-direction: row !important
        }
    </style>
}

<!-- Multi Column with Form Separator -->
<div class="card mb-6">
    <h5 class="card-header page-header">
        New Inquiry Submission
    </h5>
    <form asp-action="Create" method="post" class="card-body" id="myForm" enctype="multipart/form-data">

        <div class="row g-1 mb-3">
            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <select asp-for="@Model.CustomerId" asp-items="@Model.CustomersList" class="select2 form-select requiredField" data-allow-clear="true">
                        <option Disabled Selected>- Select Customer -</option>
                    </select>

                    <label for="CustomerId">
                        Customer
                    </label>
                    <span asp-validation-for="CustomerId" class="customerError text-warning"></span>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <select asp-for="@Model.InquiryTypeId" asp-items="@Model.InquiryTypesList" class="select2 form-select requiredField" data-allow-clear="true">
                        <option Disabled Selected>- Select Inquiry Type -</option>
                    </select>

                    <label for="inquiryTypeId">
                        Inquiry Type
                    </label>
                    <span asp-validation-for="InquiryTypeId" class="customerError text-warning"></span>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <select asp-for="@Model.SeasonsId" asp-items="@Model.SeasonsList" class="select2 form-select requiredField" data-allow-clear="true">
                        <option Disabled Selected>- Select Season -</option>
                    </select>

                    <label for="InquirySeasonId">
                        Season
                    </label>
                    <span asp-validation-for="SeasonsId" class="customerError text-warning"></span>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <select asp-for="@Model.SampleTypeId" asp-items="@Model.SampleTypesList" class="select2 form-select requiredField" data-allow-clear="true">
                        <option Disabled Selected>
                            - Sub Extend -
                        </option>
                    </select>

                    <label for="SampleTypeId">
                        Sub Extend
                    </label>
                    <span asp-validation-for="SampleTypeId" class="customerError text-warning"></span>
                </div>
            </div>
        </div>

        <div class="row g-1 mb-3">
            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.StyleNo" type="text" class="form-control requiredField" placeholder="TXMTLAN20209" />
                    <label for="style-no">
                        Style #
                    </label>
                    <span asp-validation-for="StyleNo" class="customerError text-warning"></span>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.StyleDesc" type="text" class="form-control requiredField" placeholder="SHAPEWEAR" />
                    <label for="style-desc">
                        Style Description
                    </label>
                    <span asp-validation-for="StyleDesc" class="customerError text-warning"></span>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.ColorCode" type="text" class="form-control requiredField" placeholder="BLUE" />
                    <label for="color-no">
                        Color
                    </label>
                    <span asp-validation-for="ColorCode" class="customerError text-warning"></span>
                </div>
            </div>
            <div class="col-3">
                <div class="list-group">
                    <label class="list-group-item w-50">
                        <span class="form-check mb-2">
                            <input asp-for="@Model.IsPriceStageAv" class="form-check-input me-4" type="checkbox">
                            Price Stage
                        </span>
                    </label>
                    <label class="list-group-item w-50">
                        <span class="form-check mb-2">
                            <input asp-for="@Model.IsSMVStageAv" class="form-check-input me-4" type="checkbox">
                            SMV Stage
                        </span>
                    </label>
                </div>
            </div>
        </div>

        <div class="row g-1 mb-3">
            <div class="col-6">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.Remarks" type="text" class="form-control requiredField" placeholder="Comments" />
                    <label for="color-no">
                        Remarks
                    </label>
                    <span asp-validation-for="Remarks" class="customerError text-warning"></span>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.ReceivedDate" type="date" id="receivedDate" class="form-control dob-picker requiredField" placeholder="YYYY-MM-DD" />
                    <label for="dateInqReceived">
                        Inquiry Received Date
                    </label>
                    <span asp-validation-for="ReceivedDate" class="customerError text-warning"></span>
                </div>
            </div>
            <div class="col-3">
                <input class="form-control" type="file" id="artwork" name="artwork" accept=".jpg, .jpeg, .png">
                @if (ViewData.ModelState["artwork"]?.Errors.Count > 0)
                {
                    <span class="text-danger">@ViewData.ModelState["artwork"]!.Errors[0].ErrorMessage</span>
                }
            </div>
        </div>

         <div class="row g-1 mb-3">
            <div class="col-6">
                <div class="form-floating form-floating-outline">
                    <select asp-for="@Model.RoutingPresetsId" asp-items="@Model.RoutingPresetsList" id="presetsId" class="select2 form-select requiredField" data-allow-clear="true">
                        <option Disabled Selected>- Select Routing Preset -</option>
                    </select>

                    <label for="RoutingPresetsId">
                        Routing Presets
                    </label>
                    <span asp-validation-for="RoutingPresetsId" class="customerError text-warning"></span>
                </div>
            </div>
        </div>

        <div class="row g-1 mb-3">
            <div class="mb-1">
                <small class="text-light fw-medium">Add Sizes And Quantities..</small>
            </div>
            <div class="col-3 g-1">
                <div class="form-floating form-floating-outline">
                    <input type="text" id="sizeName" class="form-control" placeholder="XL">
                    <label for="sizeName">Size Name</label>
                </div>
            </div>
            <div class="col-3 g-1">
                <div class="form-floating form-floating-outline">
                    <input type="number" id="sizeQty" class="form-control" placeholder="50">
                    <label for="sizeQty">Quantity</label>
                </div>
            </div>

            <div class="col-3 g-1">
                <div class="row align-items-stretch gx-1 h-100">
                    <div class="col-2 d-flex">
                        <button type="button" id="add-size" class="btn btn-primary w-100"><i class="fa-solid fa-plus"></i></button>
                    </div>                    
                </div>
            </div>        
        </div>

        <div class="mt-3" id="sizeContainer">
        </div>
       

        <div id="activityContainer">
        </div>

        <div class="pt-1">
            <button type="submit" class="btn btn-primary me-1">Submit</button>
            <a asp-controller="NewInquiry" asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
        </div>

    </form>

</div>
