@model NextStageInquiryVM

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/flatpickr/flatpickr.css" />
    <link rel="stylesheet" href="~/vendor/libs/select2/select2.css" />
    <link href="~/css/input-text-upper.css" rel="stylesheet" />
}

@section VendorScripts {
    <script src="~/vendor/libs/flatpickr/flatpickr.js"></script>
    <script src="~/vendor/libs/select2/select2.js"></script>
}

@section PageScripts {
    <script src="~/js/form-layouts.js"></script>
    <script src="~/custom/input-text-upper.js"></script>


    <script>
        $(document).ready(function () {
            function isInteger(value) {
                return typeof value === 'number' && Number.isInteger(value);
            }

            function handleChange() {
                var receivedDate = new Date(document.getElementById("receivedDate").value);

                // Check if a valid date is selected
                if (!isNaN(receivedDate)) {
                    // Add 2 days to the date
                    receivedDate.setDate(receivedDate.getDate());

                    // Format the date back to 'YYYY-MM-DD'
                    var receivedDate = receivedDate.toISOString().split('T')[0];

                    var selectedPresetsId = document.getElementById("presetsId").value;

                    // Convert values to integers and check if they are valid integers
                    selectedPresetsId = parseInt(selectedPresetsId, 10);


                    if (isInteger(selectedPresetsId) &&
                        receivedDate != '') {
                        let loadUrl = '@Url.Action("LoadActsAndSubActs", "NewInquiry", new { area = "PLMS" })';

                        $.ajax({
                            url: loadUrl,
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({
                                PresetId: selectedPresetsId,
                                SelectedDate: receivedDate
                            }),
                            success: function (data) {
                                var container = $('#activityContainer');
                                container.empty();

                                var tableHtml = `<div class="table-wrapper"><div class="table-responsive">
                                            <table class="table table table-rounded align-middle">
                                        <thead class="table-light">
                                            <tr>
                                                <th>#</th>
                                                <th>Activity</th>
                                                <th>User Category</th>
                                                <th>Plan Date</th>
                                                <th>Comments</th>
                                            </tr>
                                        </thead>
                                        <tbody>`;

                                $.each(data, function (index, activity) {
                                    tableHtml += `<tr>
                                    <td>${index + 1}</td>
                                    <td>
                                        <input type="hidden"
                                        id="isawaitAct-${activity.activityId}"
                                        name="ActivityList[${index}].activityId"
                                        value="${activity.activityId}"/>

                                        <input type="hidden"
                                        id="isAwait-${activity.activityId}"
                                        name="ActivityList[${index}].isAwaitingTask"
                                        value="${activity.isAwaitingTask}"/>

                                    <strong>${activity.activiytName}</strong>
                                    </td>
                                    <td>
                                      <input type="hidden"
                                        id="userCat-${activity.activityId}"
                                        name="ActivityList[${index}].userCategoryId"
                                        value="${activity.userCategoryId}"/>
                                    ${activity.userCategoryText}
                                    </td>
                                    <td>
                                        <input type="hidden"
                                        id="planDate-${activity.activityId}"
                                        name="ActivityList[${index}].activiytValue"
                                        value="${activity.activiytValue}"/>
                                        ${activity.activiytValue}
                                    </td>
                                    <td>
                                        <textarea class="form-control rounded-2"
                                        id="commentTextarea-${activity.activityId}"
                                        name="ActivityList[${index}].ActivityComment" rows="1"></textarea>
                                    </td>
                                  </tr>`;

                                    // Sub-activities
                                    $.each(activity.subActivityList, function (subIndex, subActivity) {
                                        tableHtml += `<tr>
                                        <td>${index + 1}.${subIndex + 1}</td>
                                        <td class="ps-4">
                                          <input type="hidden"
                                          id="isawaitActSub-${subActivity.activityId}"
                                          name="ActivityList[${index}].SubActivityList[${subIndex}].activityId"
                                          value="${subActivity.activityId}"/>

                                          <input type="hidden"
                                          id="isAwaitSub-${subActivity.activityId}"
                                          name="ActivityList[${index}].SubActivityList[${subIndex}].isAwaitingTask"
                                          value="${subActivity.isAwaitingTask}"/>

                                          ${subActivity.activiytName}
                                        </td>
                                        <td>
                                         <input type="hidden"
                                          id="userCatSub-${subActivity.activityId}"
                                          name="ActivityList[${index}].SubActivityList[${subIndex}].userCategoryId"
                                          value="${subActivity.userCategoryId}"/>
                                        ${subActivity.userCategoryText}
                                        </td>
                                        <td>
                                            <input type="hidden"
                                            id="subPlanDate-${subActivity.activityId}"
                                            name="ActivityList[${index}].SubActivityList[${subIndex}].activiytValue"
                                            value="${subActivity.activiytValue}" />
                                            ${subActivity.activiytValue}
                                        </td>
                                        <td>
                                            <textarea class="form-control rounded-2"
                                            id="SubcommentTextarea-${subActivity.activityId}"
                                            name="ActivityList[${index}].SubActivityList[${subIndex}].ActivityComment" rows="1"></textarea>
                                        </td>
                                      </tr>`;
                                    });
                                });

                                tableHtml += `</tbody></table></div></div>`;
                                container.append(tableHtml);
                            },
                            error: function (xhr, status, error) {
                                console.error("Error:", xhr);
                                console.error("Status:", status);
                                console.error("Error:", error);
                            }
                        });
                    }
                }
            }

            $("#presetsId").change(function () {
                handleChange();
            });

                    $(function () {
            $("#receivedDate").change(handleChange);
        });

           $('#myForm').on('submit', function (e) {
                   let isValid = true;
                  let firstInvalidField = null;

                  // 1️⃣ Check required fields
                  $('.requiredField').each(function () {
                      const field = $(this);
                      if (!field.val() || field.val().trim() === "") {
                          alert('Required field is still missing!');
                          isValid = false;
                          firstInvalidField = field;
                          return false; // break the .each loop
                      }
                  });

                  if (!isValid) {
                      firstInvalidField.focus();
                      e.preventDefault();
                      return false;
                  }

                    // 2️⃣ Check if Sample Type dropdown is selected
                  const sampleType = $('#sampleTypeId').val();
                  if (!sampleType || sampleType === "") {
                      alert('Please select a Sample Type.');
                      $('#sampleTypeId').focus();
                      e.preventDefault();
                      return false;
                  }

                  // 3️⃣ Check if activityContainer has any children
                  if ($('#activityContainer').children().length === 0) {
                      alert("Please add at least one activity.");
                      $('#activityContainer').focus();
                      e.preventDefault();
                      return false;
                  }

                  // 4️⃣ Check if artwork file is uploaded
                  if (!$('#artwork').val()) {
                      alert("Please upload an image.");
                      $('#artwork').focus();
                      e.preventDefault();
                      return false;
                  }

            });

        });
    </script>
}


@section PageStyles {
    <style>
        .mn-activity {
            background-color: rgba(115,140,171, 0.3)
        }

        .sub-activity {
            background-color: rgba(177,192,216, 0.1)
        }
    </style>
}

<!-- Multi Column with Form Separator -->
<div class="card mb-6">
    <h5 class="card-header page-header">
         Inquiry Related Submission
    </h5>
    <form asp-action="CreateNext" id="myForm" method="post" class="card-body" enctype="multipart/form-data">
        <input asp-for="@Model.Inquiry!.TrINQId" type="hidden" id="id" />
        <div class="row g-2">

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.Inquiry!.CustomerId" type="hidden" id="customerId" />
                    <input asp-for="@Model.Inquiry!.Customer" type="text" id="style-desc" class="form-control" placeholder="SHAPEWEAR" readonly style="background-color: #e6f0fa;" />
                    <label for="style-desc" style="color: darkblue;">
                        Customer Name
                    </label>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.Inquiry!.InquiryTypeId" type="hidden" id="inquiryTypeId" />
                    <input asp-for="@Model.Inquiry!.InquiryType" type="text" id="InquiryType" class="form-control" placeholder="SHAPEWEAR" readonly style="background-color: #e6f0fa;" />
                    <label for="style-desc" style="color: darkblue;">
                        Inquiry Type
                    </label>                   
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.Inquiry!.StyleNo" type="text" id="style-no" class="form-control" placeholder="TXMTLAN20209" readonly style="background-color: #e6f0fa;" />
                    <label for="style-no" style="color: darkblue;">
                        Style #
                    </label>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.Inquiry!.StyleDesc" type="text" id="style-desc" class="form-control" placeholder="SHAPEWEAR" readonly style="background-color: #e6f0fa;" />
                    <label for="style-desc" style="color: darkblue;">
                        Style Description
                    </label>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.Inquiry!.ColorCode" type="text" id="color-code" class="form-control requiredField" placeholder="BLUE" />
                    <label for="color-no">
                        Color
                    </label>
                    <span class="text-warning"></span>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.Inquiry!.SeasonName" type="text" id="season" class="form-control requiredField" placeholder="SHAPEWEAR" />
                    <label for="Season">
                        Season
                    </label>
                    <span asp-validation-for="Inquiry!.SeasonName" class="text-warning"></span>
                </div>
            </div>


            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <select asp-for="@Model.Inquiry!.SampleTypeId" asp-items="@Model.SampleTypesList" id="sampleTypeId" class="select2 form-select" data-allow-clear="true">
                        <option Disabled Selected>
                            - Sample Type -
                        </option>
                    </select>

                    <label for="SampleTypeId">
                        Sample Type
                    </label>
                    <span asp-validation-for="Inquiry!.SampleTypeId" class="text-warning"></span>
                </div>
            </div>

               

            <div class="col-6">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.Inquiry!.InquiryComment" type="text" id="color-code" class="form-control requiredField" placeholder="Comments" />
                    <label for="color-no">
                        Remarks
                    </label>
                    <span class="text-warning"></span>
                </div>
            </div>

            <div class="col-3">
                <div class="form-floating form-floating-outline">
                    <input asp-for="@Model.Inquiry!.InquiryRecDate" type="date" id="receivedDate" class="form-control dob-picker requiredField" placeholder="YYYY-MM-DD" />
                    <label for="dateInqReceived">
                        Inquiry Received Date
                    </label>
                    <span class="text-warning"></span>
                </div>
            </div>

            <div class="col-3">
                <input class="form-control" type="file" name="artwork" id="artwork" accept=".jpg, .jpeg, .png">
                <label for="formFile" class="form-label">Artwork</label>
            </div>

            <div class="row g-1 mb-3">
                <div class="col-6">
                    <div class="form-floating form-floating-outline">
                        <select asp-for="@Model.Inquiry!.RoutingPresetsId" asp-items="@Model.RoutingPresetsList" id="presetsId" class="select2 form-select requiredField" data-allow-clear="true">
                            <option Disabled Selected>- Select Routing Preset -</option>
                        </select>

                        <label for="RoutingPresetsId">
                            Routing Presets
                        </label>
                        <span asp-validation-for="Inquiry!.RoutingPresetsId" class="customerError text-warning"></span>
                    </div>
                </div>
            </div>
         

            <div class="col-md-3">
            </div>

            <div id="activityContainer">
            </div>


            <div class="pt-6">
                <button type="submit" class="btn btn-primary me-4">Submit</button>
                <a asp-controller="NextStages" asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
            </div>

        </div>
    </form>

</div>
