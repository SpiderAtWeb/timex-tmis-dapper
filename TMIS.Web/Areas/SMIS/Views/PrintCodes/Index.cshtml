@model IEnumerable<string>

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/select2/select2.css" />
}

@section VendorScripts {
    <script src="~/vendor/libs/select2/select2.js"></script>
}

@section PageStyles {
    <style>
        #content .qr-code-item {
            max-width: 400px;
        }

        #content .qr-code-text {
            width: 100%;
            font-weight: 500;
        }
    </style>

}

@section PageScripts {
    <script src="~/js/form-layouts.js"></script>

    <script>
        document.getElementById('add-btn').addEventListener('click', function () {
            const selectElement = document.getElementById('qr-code-select');
            const selectedCode = selectElement.value;
            const contentDiv = document.getElementById('content');

            if (selectedCode && !isCodeAlreadyAdded(selectedCode)) {
                const newCodeDiv = document.createElement('div');
                newCodeDiv.classList.add('qr-code-item', 'd-flex', 'align-items-center', 'mb-2', 'w-100');

                const codeButton = document.createElement('button');
                codeButton.textContent = selectedCode;
                codeButton.classList.add('btn', 'btn-outline-primary', 'qr-code-text', 'text-start', 'flex-grow-1');
                codeButton.disabled = true;

                const deleteBtn = document.createElement('button');
                deleteBtn.textContent = 'Ã—';
                deleteBtn.classList.add('btn', 'btn-danger', 'ms-2');
                deleteBtn.onclick = () => newCodeDiv.remove();

                newCodeDiv.appendChild(codeButton);
                newCodeDiv.appendChild(deleteBtn);
                contentDiv.appendChild(newCodeDiv);
            } else if (!selectedCode) {
                alert("Please select a QR code before adding.");
            } else {
                alert("This QR code is already added.");
            }
        });

        function isCodeAlreadyAdded(code) {
            const existingCodes = document.querySelectorAll('#content .qr-code-text');
            return Array.from(existingCodes).some(item => item.textContent === code);
        }

        document.getElementById("generate-btn").addEventListener("click", function () {
            const qrCodes = getSelectedQrCodes();
            if (qrCodes.length === 0) {
                alert("Please add some QR codes to generate the PDF.");
                return;
            }

            fetch("/SMIS/PrintCodes/GenerateQrPdf", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(qrCodes),
            })
            .then(response => {
                if (!response.ok) throw new Error("Error generating QR PDF");
                return response.blob();
            })
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement("a");
                a.href = url;
                a.download = "TMIS_QR_CODES.pdf";
                document.body.appendChild(a);
                a.click();
                a.remove();
                window.URL.revokeObjectURL(url);
            })
            .catch(error => {
                console.error("Error:", error);
                alert("An error occurred while generating the QR codes PDF.");
            });
        });

        function getSelectedQrCodes() {
            const qrCodes = [];
            document.querySelectorAll("#content .qr-code-text").forEach(item => {
                qrCodes.push(item.textContent);
            });
            return qrCodes;
        }
    </script>


}
<div class="card mb-6">
    <h5 class="card-header page-header">Print QR Codes</h5>
    <div class="card-body">
    @*   <div class="row">
            <div class="col-4">
            <div class="demo-section k-content">
                <h4><label for="customers">Customers</label></h4>
                <input id="multicolumncombobox" />
                <div class="demo-hint">Hint: You can filter by the fields defined in the filterFields option.</div>
            </div>
            </div>
      </div> *@


        <div class="row">
            <div class="col-4">
                <div class="form-floating form-floating-outline">
                    <select class="select2 form-select" id="qr-code-select" data-allow-clear="true">
                        <option disabled selected>- Select QR Code -</option>
                        @foreach (var code in Model)
                        {
                            <option value="@code">@code</option>
                        }
                    </select>
                    <label for="qr-code-select">QR Code</label>
                </div>
            </div>
            <div class="col-4">
                <button class="btn btn-primary h-100" id="add-btn">+</button>
                <button class="btn btn-primary h-100" id="generate-btn">Download</button>
            </div>
        </div>
        <div class="row p-5">
            <div id="content" class="m-3">
                <!-- Added QR codes will appear here -->
            </div>
        </div>
    </div>
</div>


